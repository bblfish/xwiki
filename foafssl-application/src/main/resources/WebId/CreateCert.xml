<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>WebId</web>
<name>CreateCert</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.hjs</author>
<customClass></customClass>
<contentAuthor>XWiki.hjs</contentAuthor>
<creationDate>1267009752000</creationDate>
<date>1276801739000</date>
<contentUpdateDate>1276801739000</contentUpdateDate>
<version>72.1</version>
<title>Create your WebId Certificate</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>WebId.CreateCert</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>3078187d-c578-4a45-9f24-a6293f61e2a4</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>/**
 * 
 * Copyright (c) 2008-2010, The University of Manchester, United Kingdom. All
 * rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer. Redistributions in binary
 * form must reproduce the above copyright notice, this list of conditions and
 * the following disclaimer in the documentation and/or other materials provided
 * with the distribution. Neither the name of the The University of Manchester
 * nor the names of its contributors may be used to endorse or promote products
 * derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 * Author........: Bruno Harbulot
 * 
 */
function createCsrCertEnroll(enrollFactObj, keylength) {
	/*
	 * Creates a CX509EnrollmentWebClassFactory (used to create all the other
	 * objects).
	 */
	if (enrollFactObj == null) {
		enrollFactObj = new ActiveXObject(
				"X509Enrollment.CX509EnrollmentWebClassFactory");
	}

	/*
	 * Load the information about the providers.
	 */
	var providerInfosObj = enrollFactObj
			.CreateObject("X509Enrollment.CCspInformations");
	providerInfosObj.AddAvailableCsps();

	/*
	 * Find the provider of RSA type (sufficient for this example). The type
	 * numbers for this are 1, 2 and 24.
	 * http://msdn.microsoft.com/en-us/library/aa379427%28VS.85%29.aspx
	 */
	var providerType = -1;
	var providerName = null;
	for ( var i = 0; i &lt; providerInfosObj.Count; i++) {
		var providerInfoObj = providerInfosObj.ItemByIndex(i);
		switch (providerInfoObj.Type) {
		case 1:
		case 2:
		case 24:
			providerType = providerInfoObj.Type;
			providerName = providerInfoObj.Name;
			break;
		default:
		}
	}

	/*
	 * Creates a 2048-bit key with this provider.
	 */
	var privKeyObj = enrollFactObj
			.CreateObject("X509Enrollment.CX509PrivateKey");
	privKeyObj.ProviderType = providerInfoObj.Type;
	privKeyObj.KeySpec = 1;
	privKeyObj.Length = keylength;
	// http://msdn.microsoft.com/en-us/library/aa379024%28VS.85%29.aspx
	privKeyObj.MachineContext = false;
	// http://msdn.microsoft.com/en-us/library/aa379414%28VS.85%29.aspx
	privKeyObj.KeyProtection = 2;
	// http://msdn.microsoft.com/en-us/library/aa379002%28VS.85%29.aspx
	privKeyObj.ExportPolicy = 1;

	/*
	 * Creates the PKCS#10 object and initialise as a user context.
	 */
	var pkcs10CsrObj = enrollFactObj
			.CreateObject("X509Enrollment.CX509CertificateRequestPkcs10");
	pkcs10CsrObj.InitializeFromPrivateKey(1, privKeyObj, "");

	/*
	 * Creates the enrolment object and exports the CSR.
	 */
	var enrollObj = enrollFactObj
			.CreateObject("X509Enrollment.CX509Enrollment");
	enrollObj.InitializeFromRequest(pkcs10CsrObj);
	var csr = enrollObj.CreateRequest(1);
	csr = "-----BEGIN CERTIFICATE REQUEST-----\r\n" + csr
			+ "-----END CERTIFICATE REQUEST-----";

	/*
	 * Makes the request to the server.
	 */
	var xmlHttpRequest = new XMLHttpRequest();
	xmlHttpRequest.open("POST", window.location, true);

	var params = "webid="
			+ encodeURIComponent(document.getElementById("webid").value);
	params += "&amp;cn=" + encodeURIComponent(document.getElementById("cn").value);
	params += "&amp;csrdata=" + encodeURIComponent(csr);

	xmlHttpRequest.setRequestHeader("Content-type",
			"application/x-www-form-urlencoded");
	xmlHttpRequest.setRequestHeader("Content-length", params.length);
	xmlHttpRequest.setRequestHeader("Connection", "close");

	xmlHttpRequest.send(params);

	xmlHttpRequest.onreadystatechange = function() {
		if (xmlHttpRequest.readyState == 4) {
			if (xmlHttpRequest.status == 200) {
				/*
				 * Installs the certificate.
				 */
				try {
					enrollObj.InstallResponse(4, xmlHttpRequest.responseText,
							0, "");
					window.alert("A certificate has been installed.");
				} catch (e1) {
					try {
						enrollObj.InstallResponse(0,
								xmlHttpRequest.responseText, 0, "");
						window.alert("A certificate has been installed.");
					} catch (e2) {
						window
								.alert("You're probably using Vista without SP1 or above, in which case you need to add the certificate of this authority as a trusted root certificate (not recommended in general).");
					}
				}
			} else {
				window.alert("The server returned an error status: "
						+ xmlHttpRequest.status);
			}
		}
	}
}

function createCsrXenroll(enrollObj, keylength) {
	if (enrollObj == null) {
		enrollObj = new ActiveXObject("CEnroll.CEnroll");
	}

	// http://msdn.microsoft.com/en-us/library/aa379941%28VS.85%29.aspx
	// CRYPT_EXPORTABLE: 1?
	enrollObj.GenKeyFlags = (keylength * 256 * 256) + 1;
	enrollObj.KeySpec = 2;

	var csr = enrollObj.createPKCS10("", "");
	csr = "-----BEGIN CERTIFICATE REQUEST-----\r\n" + csr
			+ "-----END CERTIFICATE REQUEST-----";

	var xmlHttpRequest = new XMLHttpRequest();
	xmlHttpRequest.open("POST", window.location, true);

	var params = "webid="
			+ encodeURIComponent(document.getElementById("webid").value);
	params += "&amp;cn=" + encodeURIComponent(document.getElementById("cn").value);
	params += "&amp;csrdata=" + encodeURIComponent(csr);

	xmlHttpRequest.setRequestHeader("Content-type",
			"application/x-www-form-urlencoded");
	xmlHttpRequest.setRequestHeader("Content-length", params.length);
	xmlHttpRequest.setRequestHeader("Connection", "close");

	xmlHttpRequest.send(params);

	xmlHttpRequest.onreadystatechange = function() {
		if (xmlHttpRequest.readyState == 4) {
			if (xmlHttpRequest.status == 200) {
				enrollObj.acceptPKCS7(xmlHttpRequest.responseText);
				window.alert("A certificate has been installed.");
			} else {
				window.alert("The server returned an error status: "
						+ xmlHttpRequest.status);
			}
		}
	}
}

function createCsr() {
	var keystrengthSelectElem = document.getElementById("keylength");
	var keylength = keystrengthSelectElem.value;

	var enrollFactObj = null;
	try {
		enrollFactObj = new ActiveXObject(
				"X509Enrollment.CX509EnrollmentWebClassFactory");
	} catch (e) {
	}

	if (enrollFactObj != null) {
		createCsrCertEnroll(enrollFactObj, keylength);
	} else {
		var enrollObj = null;
		try {
			enrollObj = new ActiveXObject("CEnroll.CEnroll");
		} catch (e) {
		}
		if (enrollObj != null) {
			createCsrXenroll(enrollObj, keylength);
		} else {
			window
					.alert("ActiveX certificate creation not supported or not enabled.");
		}
	}
}

function configurePage() {
	var keygenElem = document.getElementById("spkac");

	if (navigator.appName == "Microsoft Internet Explorer") {
		var keygenFormElem = document.getElementById("keygenform");
		keygenFormElem.removeAttribute("action");
		keygenFormElem.removeAttribute("method");

		/*
		 * Try the ActiveX approach, assume Internet Explorer.
		 */

		var iehelptextElem = document.getElementById("iehelptext");
		iehelptextElem.style.display = "block";

		var submitButtonElem = document.getElementById("keygensubmit");
		var newSumbitButtonElem = document.createElement("input");
		newSumbitButtonElem.setAttribute("type", "button");
		newSumbitButtonElem.setAttribute("value", "Submit");
		submitButtonElem.parentNode.replaceChild(newSumbitButtonElem,
				submitButtonElem);
		submitButtonElem = newSumbitButtonElem;

		if (submitButtonElem.attachEvent) {
			submitButtonElem.attachEvent("onclick", createCsr);
		} else {
			submitButtonElem.setAttribute("onclick", "createCsr()");
		}

		var keystrengthSelectElem = document.createElement("select");
		keystrengthSelectElem.setAttribute("id", "keylength");
		keystrengthSelectElem.setAttribute("name", "keylength");
		var optionElem;
		optionElem = document.createElement("option");
		optionElem.setAttribute("value", "1024");
		optionElem.appendChild(document.createTextNode("1024"));
		keystrengthSelectElem.appendChild(optionElem);
		optionElem = document.createElement("option");
		optionElem.setAttribute("value", "2048");
		optionElem.appendChild(document.createTextNode("2048"));
		keystrengthSelectElem.appendChild(optionElem);
		var keystrengthTdElem = document.getElementById("keystrenghtd");
		keystrengthTdElem.appendChild(keystrengthSelectElem);
	}
}</code>
</property>
<property>
<name>Cross Browser Javascript</name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<displayType>input</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator>|</separator>
<separators>|,</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>WebId.CreateCert</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>d43ebc93-27d4-4ed9-aaf1-08c47425090e</guid>
<property>
<tags/>
</property>
</object>
<object>
<class>
<name>XWiki.XWikiComments</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<author>
<name>author</name>
<number>1</number>
<prettyName>Author</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</author>
<comment>
<name>comment</name>
<number>5</number>
<prettyName>Comment</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</comment>
<date>
<dateFormat>dd/MM/yyyy HH:mm:ss</dateFormat>
<emptyIsToday>1</emptyIsToday>
<name>date</name>
<number>4</number>
<picker>1</picker>
<prettyName>Date</prettyName>
<size>20</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.DateClass</classType>
</date>
<highlight>
<name>highlight</name>
<number>2</number>
<prettyName>Highlighted Text</prettyName>
<rows>2</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</highlight>
<replyto>
<name>replyto</name>
<number>3</number>
<numberType>integer</numberType>
<prettyName>Reply To</prettyName>
<size>5</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.NumberClass</classType>
</replyto>
</class>
<name>WebId.CreateCert</name>
<number>0</number>
<className>XWiki.XWikiComments</className>
<guid>10ddd262-485f-47aa-a0f2-91e73f52a734</guid>
<property>
<author>XWiki.SethRussell</author>
</property>
<property>
<comment>I'm a web developer.</comment>
</property>
<property>
<date>2010-05-18 00:36:06.0</date>
</property>
<property>
<replyto></replyto>
</property>
</object>
<content>{{velocity}}
$xwiki.jsx.use("WebId.CreateCert")
{{html}}
&lt;script type="text/javascript"&gt;
document.observe("dom:loaded", function() {
  configurePage();
});
if (typeof XMLHttpRequest == "undefined") {
  XMLHttpRequest = function () {
    try { return new ActiveXObject("Msxml2.XMLHTTP.6.0"); }
      catch (e1) {}
    try { return new ActiveXObject("Msxml2.XMLHTTP.3.0"); }
      catch (e2) {}
    try { return new ActiveXObject("Msxml2.XMLHTTP"); }
      catch (e3) {}
    //Microsoft.XMLHTTP points to Msxml2.XMLHTTP.3.0 and is redundant
    throw new Error("This browser does not support XMLHttpRequest.");
  };
}
&lt;/script&gt;
{{/html}}
#set ( $nodebug =  $request.getParameter("nodebug") )
#set( $foafssl = $services.foafssl )
#set( $homepage = $xwiki.getDocument($context.user) )
#set( $addKey = true )
$xwiki.jsx.use("WebId.CreateCert")

#set( $incomplete =  ($request.getParameterMap().isEmpty() ||  $nodebug) ) 

#if(! $!xwiki.exists("WebId.RSAPubKeyClass"))

You need to create the WebId.RSAPubKeyClass
It should come with this installation's XAR file. If not you can [[create it here&gt;&gt;WebId.RSAPubKeyClass]] with the following properties:
 * A hexModulus TextArea
 * An intExponent NumberField
 * A name String Field
 * A validTo and validFrom date Field
#elseif ( $incomplete )
 {{html clean="false"}}
 &lt;div id="iehelptext" style="display: none;"&gt;
&lt;p&gt;Using Internet Explorer under Windows Vista or above or Windows
Server 2008, you need to configure the following for this to work:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Add this site to the &lt;i&gt;Trusted Sites&lt;/i&gt; list: in Internet
	Options -&amp;gt; Security -&amp;gt; Trusted Sites -&amp;gt; Sites -&amp;gt; Add ...&lt;/li&gt;
	&lt;li&gt;You may need to configure the trust level (in this tab), using
	&lt;i&gt;Custom Level...&lt;/i&gt;: enable &lt;i&gt;Initialize and script ActiveX
	controls not marked as safe for scripting&lt;/i&gt;.&lt;/li&gt;
	&lt;li&gt;If you are using Windows Vista without SP1 or above, you will
	probably need to install &lt;a href="cacert.crt"&gt;this certificate&lt;/a&gt; as a
	Trusted Root Certification Authority Certificate for your own
	certificate installation to succeed. You should probably remove that
	trusted root CA certificate afterwards.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;form id="keygenform" action="" method="post"&gt;
  &lt;table width="95%"&gt;
    &lt;tr&gt;
       &lt;td&gt;Common Name: &lt;/td&gt;
       #set($cn = $request.getParameter("cn")) 
       &lt;td&gt;&lt;input name="cn" size="30" id="cn" type="text" value="$!cn" /&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WebID: &lt;/td&gt;
      &lt;td&gt;&lt;input name="webid" size="60" id="webid" type="text" value="${homepage.getExternalURL()}#me"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Key strength: &lt;/td&gt;
      &lt;td  id="keystrenghtd"&gt;&lt;keygen id="spkac" name="spkac" challenge="TheChallenge1"/&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Valid for: &lt;br/&gt;
          (defaults to 1 year)&lt;/td&gt;
      &lt;td&gt;&lt;input type="text" name="hours" value="0.0" size="4"/&gt; hours&lt;br/&gt;
          &lt;input type="text" name="days" value="356" size="4"/&gt; days &lt;/td&gt;
    &lt;/tr&gt;
    #if (!$nodebug)
    &lt;tr&gt;
      &lt;td&gt;Debug: &lt;/td&gt;
      &lt;td&gt;&lt;input type="checkbox" name="viewParams" value="yes" /&gt; view parameters&lt;br/&gt;
          &lt;input type="checkbox" name="showCert" value="yes" /&gt; show  certificate&lt;br/&gt;
          &lt;input type="checkbox" name="makeKeyObj" value="yes" /&gt; create local objects&lt;br/&gt;
          &lt;input type="checkbox" name="nodebug" value="yes" /&gt; simulate input from a personal profile document&lt;br/&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
    #end
    &lt;tr&gt;
       &lt;td colspan="2"&gt;
      #if ($nodebug)
         Clicking the submit button will start the following sequence of events:
      #else
         If none of the above debug options are checked then the following will happen on clicking submit:
      #end
        &lt;ol&gt;
            &lt;li&gt;your browser will create a public/private key pair&lt;/li&gt;
            &lt;li&gt;send us your public key, in what is known as a &lt;a href="http://en.wikipedia.org/wiki/Certification_request"&gt;certification request&lt;/a&gt; along with information from the form above&lt;/li&gt;
            &lt;li&gt;we will create a certificate with the parameters specified&lt;/li&gt;
            &lt;li&gt;it will be returned to you and your browser will match it with your private key and add the pair to your keychain&lt;/li&gt;
            &lt;li&gt;a &lt;a href="$xwiki.getDocument('WebId.RSAPubKeyClass').getURL('edit','editor=class')"&gt;WebId.RSAPubKeyClass&lt;/a&gt; object will be created in &lt;a href="$homepage.getURL()"&gt;your public profile&lt;/a&gt;, which you will then see clearly in  &lt;a target="_blank" href="${homepage.getURL('edit','editor=object')}"&gt;its object view&lt;/a&gt;. Your profile should also have an RDF view of the key.&lt;/li&gt;
        &lt;/ol&gt;
        &lt;/td&gt;
  &lt;/tr&gt;
  &lt;/table&gt;
  &lt;input id="keygensubmit" type="submit" value="submit certificate request" /&gt;
 &lt;/form&gt;
&lt;p&gt;To test your certificate try some of &lt;a href="http://esw.w3.org/topic/foaf+ssl/RelyingParties"&gt;the services listed here&lt;/a&gt;.&lt;/p&gt;
 {{/html}}
#elseif($request.getParameter('viewParams') eq "yes")
  #foreach($key in $request.parameterNames)
     $key = $request.getParameter($key)
  #end
  #set( $addKey = false )
#end

#if (!$nodebug) #### if we come from the user's page we don't create a key 

#if( $request.csrdata ) ## for Microsoft Browsers (see javascript rewriting of html)
  #set( $cert = $foafssl.createFromPEM( $request.csrdata ) )
#elseif( $request.spkac )
  #set( $cert = $foafssl.createFromSpkac( $request.spkac ) )
#end
#if ($cert)
  #set( $pk = $cert.getSubjectPublicKey() )

  $cert.setSubjectWebID( $request.webid )
  $cert.setSubjectCommonName( $request.cn )

  #set ($hours = $request.getParameter('hours') )
  $cert.startEarlier("2")

  #if ($hours &amp;&amp; $hours ne "")
     $cert.addDurationInHours( $hours)
  #end

  #set ($days = $request.getParameter('days') )
  #if ($days &amp;&amp; $days ne "")
     $cert.addDurationInDays( $days )
  #end  

  #set($s = $cert.getSerialisation())

  #if( $request.getParameter('showCert') eq "yes")
    The certificate that would have been sent back to you is:
    mime-type: $s.getMimeType()
    Content-Length: $s.getLength()

    cert = $s.toString()
    #set( $addKey = false )
  #end
  #if ( $addKey ) ## up to here if addKey is still true, then we are creating a cert
    $s.writeTo( $response )
    $context.setFinished(true)
  #end

  #if ( $request.getParameter('makeKeyObj') eq "yes" )
   The Public Key, that will be stored on the server is:
    * hex= $pk.getHexModulus()
    * int= $pk.getIntExponent()
{{html}}More info in  &lt;a target="_blank" href="${homepage.getURL('edit','editor=object')}"&gt;its object view&lt;/a&gt;{{/html}}
    #set( $addKey = true )
  #end

  #if ( $addKey &amp;&amp; ($request.getParameter('webid') eq "${homepage.getExternalURL()}#me") )
    ## create and save the public key to the user's profile page
    #set( $rsaKey = $homepage.newObject("WebId.RSAPubKeyClass"))
    $!rsaKey.set("hexModulus", $pk.getHexModulus() )
    $!rsaKey.set("intExponent", $pk.getIntExponent() )
    $!rsaKey.set("name", $request.getParameter('cn') )
    $!rsaKey.set("validFrom", $cert.getStartDate() )
    $!rsaKey.set("validTo", $cert.getEndDate() )
    $!homepage.save()
  #end
#end
#end

{{/velocity}}</content></xwikidoc>
